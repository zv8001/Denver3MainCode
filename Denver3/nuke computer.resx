<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RichTextBox1.Text" xml:space="preserve">
    <value>Welcome to the control center of the Faux Nuclear Launch System, a meticulously crafted replica designed to evoke the awe and tension of a genuine nuclear control panel without any of the actual functionality.

The panel itself is a formidable sight, occupying a significant portion of the room with its imposing presence. Constructed with sleek, brushed metal surfaces and adorned with rows of ominous buttons, switches, and LED displays, it exudes an aura of authority and power.

At the heart of the panel lies a series of primary controls, each meticulously labeled with cryptic alphanumeric codes and symbols. Brightly colored buttons stand ready to be pressed, their purpose obscured behind a veil of secrecy. Rows of toggle switches, gleaming in the low light, add an additional layer of complexity to the interface, hinting at the intricate sequences required to enact a simulated launch.

Above the primary controls, a large display screen dominates the upper portion of the panel. Bathed in an eerie green glow, it stands as a silent sentinel, awaiting input or displaying simulated data feeds with convincing authenticity. Graphs, charts, and maps flicker to life, presenting a facade of operational readiness and strategic intelligence.

To the untrained eye, the panel may appear functional, its purpose clear and its capabilities unquestioned. Yet, upon closer inspection, the discerning observer may note subtle details betraying its true nature. Wires leading to nowhere, buttons that depress with a hollow click, and displays that shimmer with digital artifice—all serve to maintain the illusion of control without the peril of consequence.

In essence, the Faux Nuclear Launch Control Panel is a masterwork of deception, a testament to human ingenuity in the realm of mimicry and simulation. Though its power may be illusory, its impact on the imagination is undeniably real, invoking a sense of awe and trepidation in all who dare to approach its formidable facade.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWVlYAVVVVAltb
        WxViYmIyampqS3Nzc1h8fHxYhYWFSo6OjjGWlpYUnJycApqamgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZGRgBKSkoAR0dHDkxM
        TExSUlKbWVlZ0mFhYe5paWn6c3Nz/nx8fP6Ghob6j4+P7piYmNCgoKCYp6enSa2trQyrq6sArq6uAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJSUkAS0tLBUZG
        RkxGRka7SkpK9lBQUP9XV1f/X19f/2hoaP9ycnL/fHx8/4eHh/+RkZH/mpqa/6Ojo/+qqqr1sLCwt7W1
        tUe6uroEuLi4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUVFQAUlJSAFRU
        VBROTk6NSUlJ8kVFRf9ISEj/TU1N/1RUVP9dXV3/Z2dn/3Jycv99fX3/iIiI/5OTk/+dnZ3/pqam/62t
        rf+zs7P/uLi477m5uYa2trYRt7e3ALa2tgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgAF5e
        XgBgYGAdWVlZrlNTU/5NTU3/R0dH/0ZGRv9LS0v/UlJS/1tbW/9mZmb/cXFx/35+fv+Kior/lpaW/6Cg
        oP+pqan/sLCw/7a2tv+5ubn/t7e3/bKysqesrKwYra2tALS0tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABsbGwAbm5uFWZmZq9gYGD/WVlZ/1JSUv9LS0v/RkZG/0hISP9PT0//WFhY/2RkZP9xcXH/fn5+/4yM
        jP+YmJj/o6Oj/62trf+0tLT/ubm5/7i4uP+ysrL/rKys/6ampqefn58RoaGhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAenp6AICAgAV0dHSPbm5u/mdnZ/9gYGD/WFhY/1BQUP9JSUn/RkZG/0xMTP9VVVX+YmJi9XBw
        cO9/f3/vjo6O9ZycnP6oqKj/sbGx/7e3t/+5ubn/s7Oz/6ysrP+mpqb/n5+f/ZmZmYaKiooDk5OTAAAA
        AAAAAAAAAAAAAIeHhwB/f38AgoKCT319ffJ3d3f/cHBw/2hoaP9gYGD/V1dX/05OTv9HR0f8SUlJzlJS
        UnZgYGA+b29vMYCAgDGQkJA/oKCge6ysrNG1tbX9ubm5/7S0tP+srKz/paWl/52dnf+Wlpb/kJCQ7oqK
        ikeNjY0AhYWFAAAAAAAAAAAAkJCQAJGRkRCLi4u+hoaG/4CAgP96enr/cnJy/2lpaf9fX1//VVVV7UtL
        S3pEREQYKSkpAEhISAAAAAAAAAAAAKysrAAAAAAAsbGxGri4uIC1tbXwrKys/6Ojo/+bm5v/k5OT/4yM
        jP+Ghob/gYGBtnl5eQx7e3sAAAAAAJubmwCXl5cAmZmZUZWVlfiQkJD/i4uL/4WFhf99fX3/dXV1/2tr
        a+1fX19fQEBAAlVVVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1tbUAwsLCA6ysrGaioqLwmJiY/4+P
        j/+IiIj/gYGB/3x8fP93d3f0cnJySHR0dABwcHAApaWlAKysrAKhoaGgnp6e/5ubm/+Wlpb/kZGR/4qK
        iv+CgoL8eXl5d0BAQAFtbW0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKAAtra2A5SU
        lICKior+goKC/3t7e/91dXX/cHBw/2xsbP9paWmWMzMzAGRkZACsrKwArKysGaqqqtanp6f/pKSk/6Gh
        of+dnZ3/mJiY/5GRkcqIiIgXiYmJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACDg4MAhISEHHp6etFzc3P/bW1t/2lpaf9lZWX/YWFh/19fX89cXFwTXFxcALKysgCysrI4sbGx8bCw
        sP+urq7/rKys/6mpqf+lpaX/oaGhcqmpqQCYmJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHJycgBZWVkAaWlpfGRkZP9fX1//XFxc/1lZWf9XV1f/VVVV7FRUVC9UVFQAuLi4ALi4
        uFK3t7f8t7e3/7a2tv+1tbX/s7Oz/7KysvKwsLA5sLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZWVgBXV1dBVVVV9lJSUv9RUVH/T09P/05OTv9NTU35TU1NSU1N
        TQC5ubkAubm5YLm5uf+5ubn/ubm5/7m5uf+5ubn/ubm56ri4uCu4uLgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASUlJAElJSTJJSUnvSEhI/0hISP9HR0f/R0dH/0dH
        R/1HR0dXR0dHALS0tAC0tLRgtLS0/7S0tP+0tLT/tLS0/7Ozs/+zs7PqsrKyK7KysgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABISEgASEhIMkhISO9ISEj/R0dH/0dH
        R/9GRkb/RkZG/UZGRldGRkYArq6uAK6urlOurq78ra2t/6ysrP+rq6v/qqqq/6ioqPGmpqY4pqamAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVABVVVVAU1NT9VFR
        Uf9PT0//Tk5O/01NTf9MTEz5TExMSUxMTACoqKgAqKioOaenp/KlpaX/pKSk/6Ghof+fn5//m5ub/5eX
        l2+dnZ0AkJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABubm4AWlpaAGVl
        ZXlgYGD/XFxc/1lZWf9XV1f/VVVV/1RUVO1SUlIxUlJSAKGhoQChoaEan5+f2J2dnf+ampr/l5eX/5OT
        k/+Ojo7/iIiIx4CAgBWBgYEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH19
        fQB+fn4adXV1z25ubv9paWn/ZWVl/2FhYf9eXl7/XFxc0FpaWhRaWloAm5ubAKGhoQOXl5eilJSU/5CQ
        kP+MjIz/iIiI/4KCgv97e3v8cnJycg0NDQFoaGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACYmJgAuLi4Ao2NjXyEhIT9fHx8/3Z2dv9xcXH/bGxs/2hoaP9lZWWZR0dHAWBgYACSkpIAjY2NAI6O
        jlSLi4v5h4eH/4KCgv99fX3/dnZ2/29vb/9mZmbrXFxcWDc3NwFUVFQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAr6+vAMHBwQKmpqZgm5ub7pKSkv+JiYn/goKC/3x8fP93d3f/cnJy9W5ubktvb28AaWlpAAAA
        AACHh4cAiIiIEoODg8F+fn7/eXl5/3Nzc/9sbGz/ZWVl/1xcXP9TU1PrSkpKc0RERBRCQkIAR0dHAAAA
        AAAAAAAAs7OzAMvLywC3t7cWt7e3ea+vr+6mpqb/nZ2d/5SUlP+NjY3/hoaG/4GBgf98fHy5dXV1DXd3
        dwAAAAAAAAAAAH9/fwB3d3cAenp6U3Z2dvRwcHD/ampq/2NjY/9cXFz/VFRU/01NTf9HR0f7SUlJyVNT
        U29iYmI4c3NzK4SEhCyVlZU5pqamc7Gxscy4uLj8tra2/66urv+mpqb/np6e/5eXl/+QkJD/ioqK8IWF
        hUqHh4cAf39/AAAAAAAAAAAAAAAAAHNzcwB3d3cGbm5ulGlpaf9jY2P/XFxc/1VVVf9OTk7/SEhI/0ZG
        Rv9MTEz/V1dX/WRkZPJzc3Prg4OD65OTk/KioqL9ra2t/7a2tv+5ubn/tLS0/62trf+mpqb/n5+f/5iY
        mP6SkpKKhoaGBI2NjQAAAAAAAAAAAAAAAAAAAAAAAAAAAGdnZwBoaGgYYmJitFxcXP9WVlb/UFBQ/0pK
        Sv9GRkb/SEhI/1BQUP9aWlr/ZmZm/3R0dP+Dg4P/kZGR/56env+pqan/srKy/7i4uP+4uLj/s7Oz/62t
        rf+mpqb/oKCgrJmZmRSampoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxcAFpaWgBcXFwgVlZWtFFR
        Uf5MTEz/R0dH/0ZGRv9LS0v/U1NT/11dXf9oaGj/dXV1/4KCgv+Pj4//m5ub/6ampv+urq7/tbW1/7m5
        uf+3t7f/srKy/aysrK2mpqYcp6enAKWlpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQAFFR
        UQBSUlIXTU1Nk0hISPRFRUX/SEhI/05OTv9WVlb/X19f/2pqav91dXX/gYGB/42Njf+YmJj/o6Oj/6ur
        q/+ysrL/uLi4/7m5ufK2traNsLCwFLKysgCvr68AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAElJSQBKSkoHRkZGUkZGRsJKSkr5UFBQ/1hYWP9hYWH/a2tr/3Z2dv+BgYH/jIyM/5aW
        lv+goKD/qKio/6+vr/e1tbW9ubm5Tbq6uga5ubkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVFRQBLS0sAR0dHEUxMTFNSUlKiWlpa2GNjY/JsbGz8dnZ2/4CA
        gP+Kior8lJSU8Z2dndampqafra2tT7Kysg+wsLAAsrKyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZWVkAWFhYAFZWVgNcXFwZZGRkOG1t
        bVJ2dnZfgICAX4qKilGTk5M2m5ubF6GhoQOgoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAAHwAfgA8AP
        8AOAH/gDgD/8AYB//gGAf/4BgH/+AYB//gGAf/4BgH/+AYA//AGAH/gBwA/wA8AH4APgAAAH4AAAB/AA
        AA/4AAAf/AAAP/4AAH//gAH//+AH//////8=
</value>
  </data>
</root>